{"ast":null,"code":"var _jsxFileName = \"/Users/zeeshanpatel/react-movie-list/src/components/MovieForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Rating } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieForm = ({\n  onNewMovie\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Movie Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Rating, {\n          icon: \"star\",\n          rating: rating,\n          maxRating: 5,\n          onRate: (_, data) => {\n            setRating(data.rating);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-submit\",\n          onClick: async () => {\n            const movie = {\n              title,\n              rating\n            };\n            const response = await fetch(\"/add_movie\", {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify(movie)\n            });\n\n            if (response.ok) {\n              onNewMovie(movie);\n              setTitle(\"\");\n              setRating(1);\n            }\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieForm, \"kIIy/QknK4AHddCcAw5E4Z/oH70=\");\n\n_c = MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"sources":["/Users/zeeshanpatel/react-movie-list/src/components/MovieForm.js"],"names":["React","useState","Form","Input","Rating","MovieForm","onNewMovie","title","setTitle","rating","setRating","e","target","value","_","data","movie","response","fetch","method","headers","body","JSON","stringify","ok"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACA,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,WAAW,EAAC,aADd;AAEE,UAAA,KAAK,EAAEM,KAFT;AAGE,UAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,MAAM,EAAEJ,MAFV;AAGE,UAAA,SAAS,EAAE,CAHb;AAIE,UAAA,MAAM,EAAE,CAACK,CAAD,EAAIC,IAAJ,KAAa;AACnBL,YAAAA,SAAS,CAACK,IAAI,CAACN,MAAN,CAAT;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAmBE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,OAAO,EAAE,YAAY;AACnB,kBAAMO,KAAK,GAAG;AAAET,cAAAA,KAAF;AAASE,cAAAA;AAAT,aAAd;AACA,kBAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACzCC,cAAAA,MAAM,EAAE,MADiC;AAEzCC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFgC;AAKzCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf;AALmC,aAAf,CAA5B;;AAOA,gBAAIC,QAAQ,CAACO,EAAb,EAAiB;AACflB,cAAAA,UAAU,CAACU,KAAD,CAAV;AACAR,cAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,cAAAA,SAAS,CAAC,CAAD,CAAT;AACD;AACF,WAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAlDM;;GAAML,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Rating } from \"semantic-ui-react\";\n\nexport const MovieForm = ({ onNewMovie }) => {\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(1);\n\n  return (\n    <div className='container-form'>\n    <Form>\n      <Form.Field>\n        <Input\n          placeholder=\"Movie Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </Form.Field>\n\n      <Form.Field>\n        <Rating\n          icon=\"star\"\n          rating={rating}\n          maxRating={5}\n          onRate={(_, data) => {\n            setRating(data.rating);\n          }}\n        ></Rating>\n      </Form.Field>\n      <Form.Field>\n        <button\n          className=\"btn-submit\"\n          onClick={async () => {\n            const movie = { title, rating };\n            const response = await fetch(\"/add_movie\", {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\",\n              },\n              body: JSON.stringify(movie),\n            });\n            if (response.ok) {\n              onNewMovie(movie);\n              setTitle(\"\");\n              setRating(1);\n            }\n          }}\n        >\n          Submit\n        </button>\n      </Form.Field>\n    </Form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}